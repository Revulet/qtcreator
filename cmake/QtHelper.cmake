macro(qt_include_modules)
    foreach(module ${ARGN})
        find_package(Qt5${module})
        include_directories(${Qt5${module}_INCLUDE_DIRS})
    endforeach()
endmacro()

macro(qt_include_private_modules)
    foreach(module ${ARGN})
        find_package(Qt5${module})
        include_directories(${Qt5${module}_PRIVATE_INCLUDE_DIRS})
    endforeach()
endmacro()

macro(qt_find_modules)
    foreach(module ${ARGN})
        find_package(Qt5${module})
    endforeach()
endmacro()

macro(qt_use_modules target linkType)
    qt5_use_modules(${target} ${linkType} ${ARGN})
endmacro()

macro(qt_generate_moc outfiles)
    qt_generate_moc_plus(${outfiles} "" .moc ${ARGN})
endmacro()

function(qt_generate_moc_plus outfiles prefix suffix)
    foreach(src ${ARGN})
        get_filename_component(nameWithoutExtension ${src} NAME_WE)
        set(mocName ${prefix}${nameWithoutExtension}${suffix})
        qt5_generate_moc(${src} ${mocName})
        list(APPEND result ${mocName})
    endforeach()
    set(${outfiles} ${${outfiles}} ${result} PARENT_SCOPE)
    set_source_files_properties(${result} PROPERTIES
        HEADER_FILE_ONLY ON
    )
endfunction()

macro(qt_wrap_cpp outfiles)
    qt5_wrap_cpp(${outfiles} ${ARGN})
endmacro()

macro(qt_wrap_ui outfiles)
    qt5_wrap_ui(${outfiles} ${ARGN})
endmacro()

macro(qt_add_resources outfiles)
    qt5_add_resources(${outfiles} ${ARGN})
endmacro()

function(qt_detect_moc_files paths)
    list(APPEND paths ${CMAKE_CURRENT_SOURCE_DIR})
    list(REMOVE_DUPLICATES paths)
    if(NOT ARGN)
        set(ARGN *)
    endif()
    foreach(ext ${ARGN})
        set(files)
        foreach(path ${paths})
            file(GLOB_RECURSE result ${path}/*.${ext})
            list(APPEND files ${result})
        endforeach()
        list(SORT files)
        foreach(f ${files})
            file(STRINGS ${f} content REGEX "Q_OBJECT")
            if(content)
                file(RELATIVE_PATH result ${CMAKE_CURRENT_SOURCE_DIR} ${f})
                message("    ${result}")
            endif()
        endforeach()
    endforeach()
endfunction()

function(qt_get_binary_path qtBinaryPath)
    get_target_property(mocBinaryFile ${Qt5Core_MOC_EXECUTABLE} LOCATION)
    get_filename_component(binaryPath ${mocBinaryFile} PATH)
    set(${qtBinaryPath} ${binaryPath} PARENT_SCOPE)
endfunction()

qt_find_modules(Core Widgets)
